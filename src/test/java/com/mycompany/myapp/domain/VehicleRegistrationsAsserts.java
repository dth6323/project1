package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleRegistrationsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleRegistrationsAllPropertiesEquals(VehicleRegistrations expected, VehicleRegistrations actual) {
        assertVehicleRegistrationsAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleRegistrationsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleRegistrationsAllUpdatablePropertiesEquals(VehicleRegistrations expected, VehicleRegistrations actual) {
        assertVehicleRegistrationsUpdatableFieldsEquals(expected, actual);
        assertVehicleRegistrationsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleRegistrationsAutoGeneratedPropertiesEquals(VehicleRegistrations expected, VehicleRegistrations actual) {
        assertThat(expected)
            .as("Verify VehicleRegistrations auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleRegistrationsUpdatableFieldsEquals(VehicleRegistrations expected, VehicleRegistrations actual) {
        assertThat(expected)
            .as("Verify VehicleRegistrations relevant properties")
            .satisfies(e -> assertThat(e.getVehicleNumber()).as("check vehicleNumber").isEqualTo(actual.getVehicleNumber()))
            .satisfies(e -> assertThat(e.getOwnerName()).as("check ownerName").isEqualTo(actual.getOwnerName()))
            .satisfies(e -> assertThat(e.getEngineNum()).as("check engineNum").isEqualTo(actual.getEngineNum()))
            .satisfies(e -> assertThat(e.getChassisNum()).as("check chassisNum").isEqualTo(actual.getChassisNum()))
            .satisfies(e -> assertThat(e.getVehicleType()).as("check vehicleType").isEqualTo(actual.getVehicleType()))
            .satisfies(e -> assertThat(e.getBrand()).as("check brand").isEqualTo(actual.getBrand()))
            .satisfies(e -> assertThat(e.getModelCode()).as("check modelCode").isEqualTo(actual.getModelCode()))
            .satisfies(e -> assertThat(e.getColor()).as("check color").isEqualTo(actual.getColor()))
            .satisfies(e -> assertThat(e.getCapacity()).as("check capacity").isEqualTo(actual.getCapacity()))
            .satisfies(e -> assertThat(e.getRegistrationDate()).as("check registrationDate").isEqualTo(actual.getRegistrationDate()))
            .satisfies(e -> assertThat(e.getExpirationDate()).as("check expirationDate").isEqualTo(actual.getExpirationDate()))
            .satisfies(e -> assertThat(e.getIssuedBy()).as("check issuedBy").isEqualTo(actual.getIssuedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleRegistrationsUpdatableRelationshipsEquals(VehicleRegistrations expected, VehicleRegistrations actual) {
        assertThat(expected)
            .as("Verify VehicleRegistrations relationships")
            .satisfies(e -> assertThat(e.getViolations()).as("check violations").isEqualTo(actual.getViolations()));
    }
}
